> yanıtlar<-read.table("yanıtlarikili.txt",header=T)
> rt<-read.table("RT.txt",header=T)
> demografik<-read.table("demografik.txt",header=T)
> tsüre<-demografik[,10]
> deneme<-read.table("deneme.txt",header=T)
> hız<-read.table("hız.txt",header=T)
> yetenek<-read.table("yetenek.txt",header=T)
> akb<-read.table("AKB.txt",header=T)
> dkb<-read.table("DKB.txt",header=T)
> ekb<-read.table("EKB.txt",header=T)
> g<-read.table("G.txt",header=T)
> ht<-read.table("Ht.txt",header=T)
> lz<-read.table("lz.txt",header=T)
> lzs<-read.table("lzstar.txt",header=T)
> ncı<-read.table("NCI.txt",header=T)
> pbs<-read.table("PBS.txt",header=T)
> csato<-read.table("CSato.txt",header=T)
> cstar<-read.table("CStar.txt",header=T)
> u3<-read.table("U3.txt",header=T)
> zu3<-read.table("ZU3.txt",header=T)
> lt<-read.table("ChiRT.txt",header=T)
> flagged<-demografik[,3]
> 
> 
> veri<-cbind(yanıtlar,rt)
> veri<-cbind(veri,tsüre)
> veri<-cbind(veri,deneme)
> veri<-cbind(veri,hız)
> veri<-cbind(veri,yetenek)
> veri<-cbind(veri,akb)
> veri<-cbind(veri,dkb)
> veri<-cbind(veri,ekb)
> veri<-cbind(veri,g)
> veri<-cbind(veri,ht)
> veri<-cbind(veri,lz)
> veri<-cbind(veri,lzs)
> veri<-cbind(veri,ncı)
> veri<-cbind(veri,pbs)
> veri<-cbind(veri,csato)
> veri<-cbind(veri,cstar)
> veri<-cbind(veri,u3)
> veri<-cbind(veri,zu3)
> veri<-cbind(veri,lt)
> veri<-cbind(veri,flagged)
> 
> veri<-edit(veri)
> 
> 
> ölcekleme<-function(x,na.rm=T){
+ return((x-min(x))/(max(x)-min(x)))
+ }
> 
> veri$flagged = factor(veri$flagged, levels = c(0, 1))
> 
> veri[-359]<-ölcekleme(veri[-359])
> 
> library(caTools)
> set.seed(123)
> split = sample.split(veri$flagged, SplitRatio = 0.70)
> egitimset = subset(veri, split == TRUE)
> testset = subset(veri, split == FALSE)
> 
> library(class)
> 
> library(caret)
> 
> knnFit1 <- train(egitimset[-359], egitimset[,359],
+ "knn",
+ tuneLength = 10,
+ trControl = trainControl(method = "repeatedcv"))
> importance <- varImp(knnFit1, scale=FALSE)
> print(importance)
ROC curve variable importance

  only 20 most important variables shown (out of 358)

         Importance
idur.162     0.7911
idur.38      0.7821
idur.67      0.7747
idur.30      0.7742
idur.96      0.7484
idur.81      0.7466
idur.128     0.7464
idur.166     0.7441
idur.110     0.7325
idur.18      0.7301
idur.163     0.7291
idur.159     0.7279
V1           0.7236
idur.59      0.7195
idur.114     0.7188
idur.145     0.7122
idur.138     0.7096
idur.58      0.7056
idur.150     0.7054
idur.68      0.7036
> 
> plot(importance)
> importance<-edit(importance)
> imp<-c(0.526701482479784, 0.53812893081761, 
+ 0.538746630727763, 0.517786949685535, 0.530632300089847, 0.504337938005391, 
+ 0.514684411500449, 0.525297619047619, 0.555382412398922, 0.509181266846361, 
+ 0.523177785265049, 0.594578279424978, 0.548110399820306, 0.534857929020665, 
+ 0.568522574123989, 0.547183849955076, 0.500603661275831, 0.526434748427673, 
+ 0.523065476190476, 0.557038971248877, 0.545386904761905, 0.535587938005391, 
+ 0.507651055705301, 0.5290459344115, 0.510388589398023, 0.576664982030548, 
+ 0.56615004492363, 0.564900606469003, 0.5575724393531, 0.543323225516622, 
+ 0.547464622641509, 0.596866576819407, 0.523851639712489, 0.526645327942498, 
+ 0.532359052111411, 0.580680031446541, 0.539280098831986, 0.505854110512129, 
+ 0.593034029649596, 0.50543295148248, 0.518460804132974, 0.530505952380952, 
+ 0.566332547169811, 0.592416329739443, 0.56980008984726, 0.546088836477987, 
+ 0.501193283917341, 0.536023135669362, 0.553136230907457, 0.52776841868823, 
+ 0.506584119496855, 0.509476078167116, 0.503930817610063, 0.504099281221923, 
+ 0.53320137017071, 0.562275381850854, 0.635795709793351, 0.570810871518419, 
+ 0.57141453279425, 0.524567610062893, 0.519920822102426, 0.559341307277628, 
+ 0.626965408805031, 0.570277403414196, 0.521451033243486, 0.507033355795148, 
+ 0.543154761904762, 0.527333221024259, 0.521493149146451, 0.552336028751123, 
+ 0.508338948787062, 0.545106132075472, 0.644934860736748, 0.564549640610961, 
+ 0.521731805929919, 0.541793014375562, 0.590886118598383, 0.56283692722372, 
+ 0.507594901168014, 0.513645552560647, 0.524651841868823, 0.557249550763702, 
+ 0.504029088050314, 0.523107592093441, 0.514235175202156, 0.62831311769991, 
+ 0.517028863432165, 0.507735287511231, 0.510065700808625, 0.516958670260557, 
+ 0.529144204851752, 0.506752583108715, 0.58856974393531, 0.566248315363881, 
+ 0.593511343216532, 0.577001909254268, 0.609599618149146, 0.531474618149146, 
+ 0.623961141060198, 0.544713050314465, 0.508689914645103, 0.50534871967655, 
+ 0.514333445642408, 0.593160377358491, 0.533075022461815, 0.540515498652291, 
+ 0.526336477987421, 0.55052504492363, 0.517379829290207, 0.532176549865229, 
+ 0.559636118598383, 0.536654874213836, 0.523837601078167, 0.502274258760108, 
+ 0.591461702605571, 0.546495956873315, 0.515512690925427, 0.56581311769991, 
+ 0.525620507637017, 0.555185871518419, 0.511118598382749, 0.536949685534591, 
+ 0.547113656783468, 0.538957210242588, 0.524651841868823, 0.50543295148248, 
+ 0.580792340521114, 0.500056154537287, 0.528849393530997, 0.565504267744834, 
+ 0.514993261455526, 0.531376347708895, 0.528442273135669, 0.53982760557053, 
+ 0.506598158131177, 0.554638364779874, 0.528933625336927, 0.542438791554358, 
+ 0.528119384546271, 0.581648697214735, 0.502021563342318, 0.51273304132974, 
+ 0.593258647798742, 0.532457322551662, 0.528891509433962, 0.54169474393531, 
+ 0.57141453279425, 0.564016172506739, 0.520047169811321, 0.570319519317161, 
+ 0.520299865229111, 0.607900943396226, 0.570852987421384, 0.554104896675651, 
+ 0.534998315363881, 0.537230458221024, 0.609431154537287, 0.539322214734951, 
+ 0.537721810422282, 0.526898023360287, 0.528091307277628, 0.528765161725067, 
+ 0.529340745732255, 0.539729335130279, 0.530983265947889, 0.553051999101527, 
+ 0.502456761006289, 0.509448000898473, 0.5298882524708, 0.524722035040431, 
+ 0.5696316262354, 0.629183513027853, 0.562865004492363, 0.610273472596586, 
+ 0.504885444743935, 0.646029874213836, 0.627316374663073, 0.670162286612758, 
+ 0.619679357592093, 0.629941599281222, 0.508521451033243, 0.638224393530997, 
+ 0.633521451033243, 0.675300426774483, 0.656643081761006, 0.692231019766397, 
+ 0.681688005390836, 0.730079177897574, 0.64240790655885, 0.626839061096137, 
+ 0.694603548966757, 0.599997192273136, 0.552321990116801, 0.664631064690027, 
+ 0.578588274932615, 0.701707097933513, 0.617405098831986, 0.64461197214735, 
+ 0.613263701707098, 0.77420260557053, 0.686208445642408, 0.543126684636119, 
+ 0.647517969451932, 0.610526168014376, 0.548349056603774, 0.603675314465409, 
+ 0.678318733153639, 0.782064240790656, 0.655014600179695, 0.604068396226415, 
+ 0.646324685534591, 0.656811545372866, 0.659942160826595, 0.535966981132076, 
+ 0.513701707097934, 0.658538297394429, 0.60020777178796, 0.630854110512129, 
+ 0.614920260557053, 0.59943564690027, 0.565771001796945, 0.687696540880503, 
+ 0.592093441150045, 0.568592767295597, 0.515695193171608, 0.591489779874214, 
+ 0.51876965408805, 0.705595799640611, 0.719508086253369, 0.541821091644205, 
+ 0.577675763701707, 0.539406446540881, 0.536711028751123, 0.614527178796047, 
+ 0.658734838274933, 0.637704964061096, 0.774693957771788, 0.703616352201258, 
+ 0.538999326145553, 0.598101976639712, 0.517969451931716, 0.631822776280323, 
+ 0.578714622641509, 0.594451931716083, 0.581634658580413, 0.697888589398023, 
+ 0.62669867475292, 0.685857479784367, 0.538718553459119, 0.572621855345912, 
+ 0.746616689128482, 0.652319182389937, 0.664378369272237, 0.566121967654986, 
+ 0.574418800539084, 0.68919867475292, 0.663507973944295, 0.511202830188679, 
+ 0.679526055705301, 0.568985849056604, 0.610315588499551, 0.591377470799641, 
+ 0.567062556154537, 0.560183625336927, 0.532499438454627, 0.748413634321653, 
+ 0.606539195867026, 0.589285714285714, 0.617194519317161, 0.651617250673854, 
+ 0.53600909703504, 0.698534366576819, 0.637873427672956, 0.521675651392633, 
+ 0.70329346361186, 0.605275718778077, 0.694238544474393, 0.671018643306379, 
+ 0.532766172506739, 0.732493823000898, 0.5709933737646, 0.585495283018868, 
+ 0.632243935309973, 0.71883423180593, 0.512073225516622, 0.552251796945193, 
+ 0.621293800539084, 0.545822102425876, 0.521591419586703, 0.606258423180593, 
+ 0.618528189577718, 0.601962601078167, 0.643488881401617, 0.612631963162624, 
+ 0.575078616352201, 0.596627920035939, 0.605921495956873, 0.746406109613657, 
+ 0.577015947888589, 0.599912960467206, 0.567062556154537, 0.649062219227314, 
+ 0.541006850853549, 0.57617362982929, 0.645749101527403, 0.576875561545373, 
+ 0.621799191374663, 0.709638926325247, 0.631134883198562, 0.701033243486074, 
+ 0.689942722371968, 0.514403638814016, 0.51248034591195, 0.618794923629829, 
+ 0.712165880503145, 0.50169867475292, 0.54288802785265, 0.545709793351303, 
+ 0.686854222821204, 0.705399258760108, 0.688215970350404, 0.67866969901168, 
+ 0.553094115004492, 0.603422619047619, 0.51902234950584, 0.596838499550764, 
+ 0.596038297394429, 0.629141397124888, 0.727903189577718, 0.604012241689128, 
+ 0.664883760107817, 0.791063005390836, 0.729124550763702, 0.54976695867026, 
+ 0.60784478885894, 0.744089734950584, 0.584709119496855, 0.677153526504942, 
+ 0.617180480682839, 0.637494384546271, 0.678164308176101, 0.546102875112309, 
+ 0.723607367475292, 0.528863432165319, 0.515526729559748, 0.523500673854447, 
+ 0.513631513926325, 0.5022040655885, 0.530772686433064, 0.50891453279425, 
+ 0.512157457322552, 0.504071203953279, 0.527108602875112, 0.526013589398023, 
+ 0.543028414195867, 0.519050426774483, 0.515049415992812, 0.578419811320755
+ )
> col<-c("iraw.1", "iraw.2", 
+ "iraw.3", "iraw.4", "iraw.5", "iraw.6", "iraw.7", "iraw.8", "iraw.9", 
+ "iraw.10", "iraw.11", "iraw.12", "iraw.13", "iraw.14", "iraw.15", 
+ "iraw.16", "iraw.17", "iraw.18", "iraw.19", "iraw.20", "iraw.21", 
+ "iraw.22", "iraw.23", "iraw.24", "iraw.25", "iraw.26", "iraw.27", 
+ "iraw.28", "iraw.29", "iraw.30", "iraw.31", "iraw.32", "iraw.33", 
+ "iraw.34", "iraw.35", "iraw.36", "iraw.37", "iraw.38", "iraw.39", 
+ "iraw.40", "iraw.41", "iraw.42", "iraw.43", "iraw.44", "iraw.45", 
+ "iraw.46", "iraw.47", "iraw.48", "iraw.49", "iraw.50", "iraw.51", 
+ "iraw.52", "iraw.53", "iraw.54", "iraw.55", "iraw.56", "iraw.57", 
+ "iraw.58", "iraw.59", "iraw.60", "iraw.61", "iraw.62", "iraw.63", 
+ "iraw.64", "iraw.65", "iraw.66", "iraw.67", "iraw.68", "iraw.69", 
+ "iraw.70", "iraw.71", "iraw.72", "iraw.73", "iraw.74", "iraw.75", 
+ "iraw.76", "iraw.77", "iraw.78", "iraw.79", "iraw.80", "iraw.81", 
+ "iraw.82", "iraw.83", "iraw.84", "iraw.85", "iraw.86", "iraw.87", 
+ "iraw.88", "iraw.89", "iraw.90", "iraw.91", "iraw.92", "iraw.93", 
+ "iraw.94", "iraw.95", "iraw.96", "iraw.97", "iraw.98", "iraw.99", 
+ "iraw.100", "iraw.101", "iraw.102", "iraw.103", "iraw.104", "iraw.105", 
+ "iraw.106", "iraw.107", "iraw.108", "iraw.109", "iraw.110", "iraw.111", 
+ "iraw.112", "iraw.113", "iraw.114", "iraw.115", "iraw.116", "iraw.117", 
+ "iraw.118", "iraw.119", "iraw.120", "iraw.121", "iraw.122", "iraw.123", 
+ "iraw.124", "iraw.125", "iraw.126", "iraw.127", "iraw.128", "iraw.129", 
+ "iraw.130", "iraw.131", "iraw.132", "iraw.133", "iraw.134", "iraw.135", 
+ "iraw.136", "iraw.137", "iraw.138", "iraw.139", "iraw.140", "iraw.141", 
+ "iraw.142", "iraw.143", "iraw.144", "iraw.145", "iraw.146", "iraw.147", 
+ "iraw.148", "iraw.149", "iraw.150", "iraw.151", "iraw.152", "iraw.153", 
+ "iraw.154", "iraw.155", "iraw.156", "iraw.157", "iraw.158", "iraw.159", 
+ "iraw.160", "iraw.161", "iraw.162", "iraw.163", "iraw.164", "iraw.165", 
+ "iraw.166", "iraw.167", "iraw.168", "iraw.169", "iraw.170", "idur.1", 
+ "idur.2", "idur.3", "idur.4", "idur.5", "idur.6", "idur.7", "idur.8", 
+ "idur.9", "idur.10", "idur.11", "idur.12", "idur.13", "idur.14", 
+ "idur.15", "idur.16", "idur.17", "idur.18", "idur.19", "idur.20", 
+ "idur.21", "idur.22", "idur.23", "idur.24", "idur.25", "idur.26", 
+ "idur.27", "idur.28", "idur.29", "idur.30", "idur.31", "idur.32", 
+ "idur.33", "idur.34", "idur.35", "idur.36", "idur.37", "idur.38", 
+ "idur.39", "idur.40", "idur.41", "idur.42", "idur.43", "idur.44", 
+ "idur.45", "idur.46", "idur.47", "idur.48", "idur.49", "idur.50", 
+ "idur.51", "idur.52", "idur.53", "idur.54", "idur.55", "idur.56", 
+ "idur.57", "idur.58", "idur.59", "idur.60", "idur.61", "idur.62", 
+ "idur.63", "idur.64", "idur.65", "idur.66", "idur.67", "idur.68", 
+ "idur.69", "idur.70", "idur.71", "idur.72", "idur.73", "idur.74", 
+ "idur.75", "idur.76", "idur.77", "idur.78", "idur.79", "idur.80", 
+ "idur.81", "idur.82", "idur.83", "idur.84", "idur.85", "idur.86", 
+ "idur.87", "idur.88", "idur.89", "idur.90", "idur.91", "idur.92", 
+ "idur.93", "idur.94", "idur.95", "idur.96", "idur.97", "idur.98", 
+ "idur.99", "idur.100", "idur.101", "idur.102", "idur.103", "idur.104", 
+ "idur.105", "idur.106", "idur.107", "idur.108", "idur.109", "idur.110", 
+ "idur.111", "idur.112", "idur.113", "idur.114", "idur.115", "idur.116", 
+ "idur.117", "idur.118", "idur.119", "idur.120", "idur.121", "idur.122", 
+ "idur.123", "idur.124", "idur.125", "idur.126", "idur.127", "idur.128", 
+ "idur.129", "idur.130", "idur.131", "idur.132", "idur.133", "idur.134", 
+ "idur.135", "idur.136", "idur.137", "idur.138", "idur.139", "idur.140", 
+ "idur.141", "idur.142", "idur.143", "idur.144", "idur.145", "idur.146", 
+ "idur.147", "idur.148", "idur.149", "idur.150", "idur.151", "idur.152", 
+ "idur.153", "idur.154", "idur.155", "idur.156", "idur.157", "idur.158", 
+ "idur.159", "idur.160", "idur.161", "idur.162", "idur.163", "idur.164", 
+ "idur.165", "idur.166", "idur.167", "idur.168", "idur.169", "idur.170", 
+ "tsüre", "deneme", "hız", "yetenek", "AKB", "DKB", "EKB", "G", 
+ "Ht", "lz", "lzstar", "NCI", "PBS", "CSato", "CStar", "U3", "ZU3", 
+ "lt")
> 
> 
> imp<-as.matrix(imp)
> col<-as.matrix(col)
> dd<-cbind(col,imp)
> dd<-edit(dd)
> dd<-subset(dd,imp>=.6)
> dd<-edit(dd)
> 
> 
> 
> d1<-yanıtlar[,57]
> d2<-yanıtlar[,63]
> d3<-yanıtlar[,73]
> d4<-yanıtlar[,86]
> d5<-yanıtlar[,97]
> d6<-yanıtlar[,99]
> d7<-yanıtlar[,152]
> d8<-yanıtlar[,157]
> 
> l1<-rt[,2]
> l2<-rt[,4]
> l3<-rt[,6:10]
> l34<-rt[,12:21]
> l4<-rt[,34]
> l4<-rt[,24]
> l5<-rt[,26:31]
> l6<-rt[,33:34]
> l7<-rt[,36:43]
> l8<-rt[,46:49]
> l9<-rt[,52]
> r1<-rt[,58:59]
> r2<-rt[,64:68]
> r3<-rt[,72]
> r4<-rt[,76:78]
> r5<-rt[,81:83]
> r6<-rt[,86:87]
> r7<-rt[,89]
> r8<-rt[,91]
> r9<-rt[,96:97]
> n1<-rt[,99:100]
> n2<-rt[,102:103]
> n3<-rt[,105:108]
> n4<-rt[,110]
> n5<-rt[,113:114]
> n6<-rt[,117]
> n7<-rt[,120:124]
> n8<-rt[,127:128]
> n9<-rt[,132]
> n10<-rt[,135]
> n11<-rt[,137:141]
> n112<-rt[,144:145]
> n12<-rt[,150:152]
> n13<-rt[,154]
> n14<-rt[,158:163]
> n15<-rt[,165:166]
> n16<-rt[,168:170]
> 
> veriseti<-cbind(d1,d2)
> veriseti<-cbind(veriseti,d3)
> veriseti<-cbind(veriseti,d4)
> veriseti<-cbind(veriseti,d5)
> veriseti<-cbind(veriseti,d6)
> veriseti<-cbind(veriseti,d7)
> veriseti<-cbind(veriseti,d8)
> veriseti<-cbind(veriseti,l1)
> veriseti<-cbind(veriseti,l2)
> veriseti<-cbind(veriseti,l3)
> veriseti<-cbind(veriseti,l4)
> veriseti<-cbind(veriseti,l5)
> veriseti<-cbind(veriseti,l6)
> veriseti<-cbind(veriseti,l7)
> veriseti<-cbind(veriseti,l8)
> veriseti<-cbind(veriseti,l9)
> veriseti<-cbind(veriseti,l34)
> veriseti<-cbind(veriseti,r1)
> veriseti<-cbind(veriseti,r2)
> veriseti<-cbind(veriseti,r3)
> veriseti<-cbind(veriseti,r4)
> veriseti<-cbind(veriseti,r5)
> veriseti<-cbind(veriseti,r6)
> veriseti<-cbind(veriseti,r7)
> veriseti<-cbind(veriseti,r8)
> veriseti<-cbind(veriseti,r9)
> veriseti<-cbind(veriseti,n1)
> veriseti<-cbind(veriseti,n2)
> veriseti<-cbind(veriseti,n3)
> veriseti<-cbind(veriseti,n4)
> veriseti<-cbind(veriseti,n5)
> veriseti<-cbind(veriseti,n6)
> veriseti<-cbind(veriseti,n7)
> veriseti<-cbind(veriseti,n8)
> veriseti<-cbind(veriseti,n9)
> veriseti<-cbind(veriseti,n10)
> veriseti<-cbind(veriseti,n11)
> veriseti<-cbind(veriseti,n12)
> veriseti<-cbind(veriseti,n13)
> veriseti<-cbind(veriseti,n14)
> veriseti<-cbind(veriseti,n15)
> veriseti<-cbind(veriseti,n16)
> veriseti<-cbind(veriseti,n112)
> 
> veriseti<-cbind(veriseti,tsüre)
> veriseti<-cbind(veriseti,lt)
> veriseti<-cbind(veriseti,flagged)
> 
> veriseti<-edit(veriseti)
> 
> 
> 
> ncol(veriseti)
[1] 113
> ölcekleme<-function(x,na.rm=T){
+ return((x-min(x))/(max(x)-min(x)))
+ }
> 
> veriseti[-113]<-ölcekleme(veriseti[-113])
> veriseti<-edit(veriseti)
> veriseti$flagged = factor(veriseti$flagged, levels = c(0, 1))
> library(caTools)
> set.seed(123)
> split = sample.split(veriseti$flagged, SplitRatio = 0.70)
> egitimset = subset(veriseti, split == TRUE)
> testset = subset(veriseti, split == FALSE)
> library(class)
> y_pred = knn(train = egitimset[,-113],
+ test = testset[,-113],
+  cl = egitimset[,113],
+ k = 5)
> cm = table(testset[, 113], y_pred)
> cm
   y_pred
      0   1
  0 477   0
  1   8   6
> 
> 
> 
> 
> classifier = naiveBayes(x = egitimset[-113],
+  y = egitimset$flagged)
> y_pred = predict(classifier, newdata = testset[-113])
> cm = table(testset[, 113], y_pred)
> cm
   y_pred
      0   1
  0 419  58
  1   6   8
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  > ölcekleme<-function(x,na.rm=T){
+ return((x-min(x))/(max(x)-min(x)))
+ }
> 
> veri$flagged = factor(veri$flagged, levels = c(0, 1))
> 
> veri[-359]<-ölcekleme(veri[-359])
> 
> 
> library(caTools)
> set.seed(123)
> split = sample.split(veri$flagged, SplitRatio = 0.70)
> egitimset = subset(veri, split == TRUE)
> testset = subset(veri, split == FALSE)
> 
> 
> library(caret)
> rfFit1 <- train(egitimset[-359], egitimset[,359],
+ "rf",
+ tuneLength = 10,
+ trControl = trainControl(method = "repeatedcv"))
> importance <- varImp(rfFit1, scale=FALSE)
> print(importance)
rf variable importance

  only 20 most important variables shown (out of 358)

         Overall
V1        6.2003
tsüre     3.5823
idur.59   1.0668
idur.146  1.0491
idur.163  0.9613
idur.77   0.9421
idur.93   0.9268
idur.138  0.9242
idur.142  0.7609
idur.67   0.7291
idur.155  0.7080
AKB       0.6850
idur.170  0.6756
V1.2      0.6509
idur.111  0.6370
idur.84   0.6177
idur.36   0.6122
idur.120  0.6045
ZU3       0.5838
idur.81   0.5723

> importance<-edit(importance)
> deger<-c(0.00388571428571429, 0.0275897435897436, 
+ 0.0299430438842204, 0.012, 0.011, 0.00645614035087719, 0.0272, 
+ 0.00838095238095238, 0.0506902121134679, 0, 0.00746666666666667, 
+ 0.0168272727272727, 0.0254888888888889, 0.00533333333333333, 
+ 0.00266666666666667, 0.0755277838479077, 0.0347142857142857, 
+ 0.0048, 0.00369615384615385, 0.0203619047619048, 0.011, 0.00722857142857143, 
+ 0.0613403155324208, 0, 0.0294362714505509, 0.0036, 0.0101723145071982, 
+ 0.0136833333333333, 0.0204, 0.0193888888888889, 0.0048, 0.0126666666666667, 
+ 0.0243116883116883, 0.0138923076923077, 0.0123333333333333, 0.00761202834365118, 
+ 0.003, 0.00533333333333333, 0.04155670995671, 0, 0, 0.0207032743232972, 
+ 0, 0.0446714285714286, 0.0167333333333333, 0.012991452991453, 
+ 0.00466666666666667, 0.0257203907203907, 0.0281641025641026, 
+ 0.01225, 0.003, 0.0230470085470085, 0.002, 0.0179722222222222, 
+ 0.00756756756756756, 0.0236952380952381, 0.103981155933714, 0.0224358974358974, 
+ 0.0105, 0.00466666666666667, 0.00904761904761905, 0.0254039294039294, 
+ 0.0393185901319776, 0, 0, 0.0159477124183007, 0.0197454545454545, 
+ 0.003, 0.0215555555555556, 0.0146666666666667, 0.00975, 0.0247515151515151, 
+ 0.0273809523809524, 0.0639401086548552, 0.0237272727272727, 0.0401447053531264, 
+ 0.0313333333333333, 0.075206555604698, 0.0201818181818182, 0.012047619047619, 
+ 0, 0.00638095238095238, 0.0340823223834988, 0.012547619047619, 
+ 0.0278969363969364, 0.0323162734422263, 0.0056, 0.0180333333333333, 
+ 0.022974358974359, 0.0068, 0.00988095238095238, 0.0101285714285714, 
+ 0.0262333333333333, 0.00766666666666667, 0.0483831269349845, 
+ 0.0145666666666667, 0.0409874791874792, 0.0276666666666667, 0.0514798849768066, 
+ 0.0152952380952381, 0.017, 0.00972549019607843, 0.0108772679562154, 
+ 0.0188380952380952, 0.0062, 0.0163151515151515, 0.008, 0.0307097506156722, 
+ 0.0100888888888889, 0.003, 0.0206666666666667, 0.0120952380952381, 
+ 0.0263428571428571, 0.0225777777777778, 0.0872832313531334, 0.0153809523809524, 
+ 0.0149555555555556, 0.0233844155844156, 0.0402574595055413, 0.008, 
+ 0.0032, 0.0156428571428571, 0.0334671679197995, 0.00342857142857143, 
+ 0.02275, 0.0381666092077857, 0.0330456253354804, 0, 0, 0.01, 
+ 0.0396666666666667, 0.00566666666666667, 0.0150238095238095, 
+ 0.003, 0.008, 0.0115897435897436, 0.0336242424242424, 0.0098, 
+ 0.0035, 0.00586666666666667, 0.0228372549019608, 0.0122666666666667, 
+ 0.0735118979409109, 0.012952380952381, 0.0112, 0.04475670995671, 
+ 0.0363960784313726, 0.0143174603174603, 0.0234571428571429, 0.0259555555555556, 
+ 0.0151666666666667, 0.014247619047619, 0.0145333333333333, 0.00876190476190476, 
+ 0.00702898369111184, 0.00266666666666667, 0.092258576423523, 
+ 0.0767043113748996, 0.0177777777777778, 0.0104712918660287, 0.0166596884367782, 
+ 0.0126666666666667, 0.0148730158730159, 0.00666666666666667, 
+ 0.002, 0.0122333333333333, 0.0200888888888889, 0.00786666666666667, 
+ 0.0116, 0.00683636363636364, 0.146400587646835, 0.0811753834141749, 
+ 0.279909874303466, 0.214753735568715, 0.142597178450278, 0.234518683022974, 
+ 0.407969337475424, 0.177702899802364, 0.194089880251171, 0.163121123276567, 
+ 0.271615852790161, 0.294343243514348, 0.189922068918295, 0.135932710028274, 
+ 0.526213052245365, 0.16773413816043, 0.111449510157259, 0.324797495793373, 
+ 0.206930577291794, 0.162633815976601, 0.0733351998661755, 0.138394378579277, 
+ 0.184011961608735, 0.158280048026376, 0.132642191048276, 0.170152314403766, 
+ 0.481925329962984, 0.148535462991445, 0.176664598527488, 0.437884970334322, 
+ 0.211576340773037, 0.119216567451235, 0.124433388220351, 0.134930666634416, 
+ 0.186060295685478, 0.61217300163797, 0.15373190561081, 0.354995272705855, 
+ 0.179507598726752, 0.130868897795219, 0.449515204452712, 0.16723565344987, 
+ 0.15118336728703, 0.204595378455242, 0.311849404703216, 0.209032579808725, 
+ 0.0962108785799923, 0.498101884445051, 0.497556813922515, 0.117263535049549, 
+ 0.0781770596262467, 0.170005392640699, 0.126456446102954, 0.331024937822331, 
+ 0.190403325563326, 0.260538344909353, 0.155375238272376, 0.283641945495558, 
+ 1.06675753111786, 0.438625741221386, 0.116563138305909, 0.13129670773731, 
+ 0.0761244226774, 0.0870191937191937, 0.18564147412769, 0.190848734536605, 
+ 0.729061942453418, 0.29056594268523, 0.570933389719073, 0.208204356387905, 
+ 0.164925765456858, 0.152806448037831, 0.0608787306430327, 0.517421882302678, 
+ 0.113490476190476, 0.168891226064157, 0.942099670881711, 0.439871280919452, 
+ 0.0703055404912548, 0.123027606597425, 0.572328825251122, 0.0870403459008963, 
+ 0.209139201687295, 0.617669750542868, 0.148146028348311, 0.262862862638594, 
+ 0.182515823194847, 0.463273105967401, 0.0837784984082623, 0.0607975390809232, 
+ 0.0539734417344173, 0.0488761223807304, 0.926756647630645, 0.218103327606692, 
+ 0.046703323405331, 0.274702492312966, 0.159312340570103, 0.106423570030532, 
+ 0.141839280150925, 0.234427640973057, 0.117529774655373, 0.168442098417418, 
+ 0.0894313299580172, 0.158601753873509, 0.149688933810192, 0.268563587092394, 
+ 0.36134310603677, 0.217903567505526, 0.118630025077315, 0.543992097985591, 
+ 0.637024174424811, 0.167778209973827, 0.156886869303339, 0.274013174373345, 
+ 0.135997781370904, 0.283904645485017, 0.225362605042975, 0.218543384500697, 
+ 0.308875448155072, 0.604488287345486, 0.13885218476489, 0.172321957151691, 
+ 0.141086959302126, 0.205819977431369, 0.209106079022348, 0.138534154202412, 
+ 0.108960319546713, 0.342617462448311, 0.0329339729921819, 0.355400606459672, 
+ 0.282537468468679, 0.0950473512517536, 0.153815437259474, 0.0890976496178104, 
+ 0.0985548881388988, 0.0925361749915992, 0.534340524579526, 0.924159094354298, 
+ 0.345585054219789, 0.459882776559581, 0.118925200648762, 0.760866248353788, 
+ 0.225536921901984, 0.139919439043155, 0.389828960734034, 1.04911373390114, 
+ 0.327405507763667, 0.209199239670472, 0.151892021757827, 0.238744374135926, 
+ 0.188493359176039, 0.122336980252717, 0.105657165744825, 0.0889131267275197, 
+ 0.707959351342779, 0.129512994985465, 0.550365825544056, 0.245293755705352, 
+ 0.448812275727346, 0.154783828887453, 0.139842849703596, 0.506742362522977, 
+ 0.961264228719091, 0.153574954322851, 0.0860461666640782, 0.394101454765501, 
+ 0.129724267858121, 0.383533290742501, 0.0634640963537259, 0.675568965139398, 
+ 3.58233420273296, 0.0976035302111515, 6.20028408095182, 0.471607842388907, 
+ 0.685000121691024, 0.11216335452077, 0.471694828784619, 0.107339193895541, 
+ 0.0690375891652208, 0.0990905610286089, 0.189932691298707, 0.143695697460841, 
+ 0.165719901228253, 0.181525439465305, 0.148101129548409, 0.147233586806367, 
+ 0.583789049478511, 0.650935506003151)
> importance<-edit(importance)
> degisken<-c("iraw.1", 
+ "iraw.2", "iraw.3", "iraw.4", "iraw.5", "iraw.6", "iraw.7", "iraw.8", 
+ "iraw.9", "iraw.10", "iraw.11", "iraw.12", "iraw.13", "iraw.14", 
+ "iraw.15", "iraw.16", "iraw.17", "iraw.18", "iraw.19", "iraw.20", 
+ "iraw.21", "iraw.22", "iraw.23", "iraw.24", "iraw.25", "iraw.26", 
+ "iraw.27", "iraw.28", "iraw.29", "iraw.30", "iraw.31", "iraw.32", 
+ "iraw.33", "iraw.34", "iraw.35", "iraw.36", "iraw.37", "iraw.38", 
+ "iraw.39", "iraw.40", "iraw.41", "iraw.42", "iraw.43", "iraw.44", 
+ "iraw.45", "iraw.46", "iraw.47", "iraw.48", "iraw.49", "iraw.50", 
+ "iraw.51", "iraw.52", "iraw.53", "iraw.54", "iraw.55", "iraw.56", 
+ "iraw.57", "iraw.58", "iraw.59", "iraw.60", "iraw.61", "iraw.62", 
+ "iraw.63", "iraw.64", "iraw.65", "iraw.66", "iraw.67", "iraw.68", 
+ "iraw.69", "iraw.70", "iraw.71", "iraw.72", "iraw.73", "iraw.74", 
+ "iraw.75", "iraw.76", "iraw.77", "iraw.78", "iraw.79", "iraw.80", 
+ "iraw.81", "iraw.82", "iraw.83", "iraw.84", "iraw.85", "iraw.86", 
+ "iraw.87", "iraw.88", "iraw.89", "iraw.90", "iraw.91", "iraw.92", 
+ "iraw.93", "iraw.94", "iraw.95", "iraw.96", "iraw.97", "iraw.98", 
+ "iraw.99", "iraw.100", "iraw.101", "iraw.102", "iraw.103", "iraw.104", 
+ "iraw.105", "iraw.106", "iraw.107", "iraw.108", "iraw.109", "iraw.110", 
+ "iraw.111", "iraw.112", "iraw.113", "iraw.114", "iraw.115", "iraw.116", 
+ "iraw.117", "iraw.118", "iraw.119", "iraw.120", "iraw.121", "iraw.122", 
+ "iraw.123", "iraw.124", "iraw.125", "iraw.126", "iraw.127", "iraw.128", 
+ "iraw.129", "iraw.130", "iraw.131", "iraw.132", "iraw.133", "iraw.134", 
+ "iraw.135", "iraw.136", "iraw.137", "iraw.138", "iraw.139", "iraw.140", 
+ "iraw.141", "iraw.142", "iraw.143", "iraw.144", "iraw.145", "iraw.146", 
+ "iraw.147", "iraw.148", "iraw.149", "iraw.150", "iraw.151", "iraw.152", 
+ "iraw.153", "iraw.154", "iraw.155", "iraw.156", "iraw.157", "iraw.158", 
+ "iraw.159", "iraw.160", "iraw.161", "iraw.162", "iraw.163", "iraw.164", 
+ "iraw.165", "iraw.166", "iraw.167", "iraw.168", "iraw.169", "iraw.170", 
+ "idur.1", "idur.2", "idur.3", "idur.4", "idur.5", "idur.6", "idur.7", 
+ "idur.8", "idur.9", "idur.10", "idur.11", "idur.12", "idur.13", 
+ "idur.14", "idur.15", "idur.16", "idur.17", "idur.18", "idur.19", 
+ "idur.20", "idur.21", "idur.22", "idur.23", "idur.24", "idur.25", 
+ "idur.26", "idur.27", "idur.28", "idur.29", "idur.30", "idur.31", 
+ "idur.32", "idur.33", "idur.34", "idur.35", "idur.36", "idur.37", 
+ "idur.38", "idur.39", "idur.40", "idur.41", "idur.42", "idur.43", 
+ "idur.44", "idur.45", "idur.46", "idur.47", "idur.48", "idur.49", 
+ "idur.50", "idur.51", "idur.52", "idur.53", "idur.54", "idur.55", 
+ "idur.56", "idur.57", "idur.58", "idur.59", "idur.60", "idur.61", 
+ "idur.62", "idur.63", "idur.64", "idur.65", "idur.66", "idur.67", 
+ "idur.68", "idur.69", "idur.70", "idur.71", "idur.72", "idur.73", 
+ "idur.74", "idur.75", "idur.76", "idur.77", "idur.78", "idur.79", 
+ "idur.80", "idur.81", "idur.82", "idur.83", "idur.84", "idur.85", 
+ "idur.86", "idur.87", "idur.88", "idur.89", "idur.90", "idur.91", 
+ "idur.92", "idur.93", "idur.94", "idur.95", "idur.96", "idur.97", 
+ "idur.98", "idur.99", "idur.100", "idur.101", "idur.102", "idur.103", 
+ "idur.104", "idur.105", "idur.106", "idur.107", "idur.108", "idur.109", 
+ "idur.110", "idur.111", "idur.112", "idur.113", "idur.114", "idur.115", 
+ "idur.116", "idur.117", "idur.118", "idur.119", "idur.120", "idur.121", 
+ "idur.122", "idur.123", "idur.124", "idur.125", "idur.126", "idur.127", 
+ "idur.128", "idur.129", "idur.130", "idur.131", "idur.132", "idur.133", 
+ "idur.134", "idur.135", "idur.136", "idur.137", "idur.138", "idur.139", 
+ "idur.140", "idur.141", "idur.142", "idur.143", "idur.144", "idur.145", 
+ "idur.146", "idur.147", "idur.148", "idur.149", "idur.150", "idur.151", 
+ "idur.152", "idur.153", "idur.154", "idur.155", "idur.156", "idur.157", 
+ "idur.158", "idur.159", "idur.160", "idur.161", "idur.162", "idur.163", 
+ "idur.164", "idur.165", "idur.166", "idur.167", "idur.168", "idur.169", 
+ "idur.170", "tsüre", "deneme", "V1", "V1.1", "AKB", "DKB", "EKB", 
+ "G", "Ht", "lz", "lzstar", "NCI", "PBS", "CSato", "CStar", "U3", 
+ "ZU3", "V1.2")

> imp<-as.matrix(cbind(degisken,deger))
> imp<-edit(imp)
> imp<-edit(imp)
> 
> dd<-subset(imp,deger>=.5)
> dd<-edit(dd)



> yanıtlar<-read.table("yanıtlarikili.txt",header=T)
> rt<-read.table("RT.txt",header=T)
> demografik<-read.table("demografik.txt",header=T)
> tsüre<-demografik[,10]
> deneme<-read.table("deneme.txt",header=T)
> hız<-read.table("hız.txt",header=T)
> yetenek<-read.table("yetenek.txt",header=T)
> akb<-read.table("AKB.txt",header=T)
> dkb<-read.table("DKB.txt",header=T)
> ekb<-read.table("EKB.txt",header=T)
> g<-read.table("G.txt",header=T)
> ht<-read.table("Ht.txt",header=T)
> lz<-read.table("lz.txt",header=T)
> lzs<-read.table("lzstar.txt",header=T)
> ncı<-read.table("NCI.txt",header=T)
> pbs<-read.table("PBS.txt",header=T)
> csato<-read.table("CSato.txt",header=T)
> cstar<-read.table("CStar.txt",header=T)
> u3<-read.table("U3.txt",header=T)
> zu3<-read.table("ZU3.txt",header=T)
> lt<-read.table("ChiRT.txt",header=T)
> flagged<-demografik[,3]
> 
> 
> d1<-rt[,15]
> d2<-rt[,36]
> d3<-rt[,59]
> d4<-rt[,67]
> d5<-rt[,69]
> d6<-rt[,74]
> d7<-rt[,77]
> d8<-rt[,81]
> d9<-rt[,84]
> d10<-rt[,93]
> d11<-rt[,110]
> d12<-rt[,111]
> d13<-rt[,120]
> d14<-rt[,137]
> d15<-rt[,138]
> d16<-rt[,142]
> d17<-rt[,155]
> d18<-rt[,157]
> d19<-rt[,162]
> d20<-rt[,163]
> d21<-rt[,170]
> d22<-tsüre
> d23<-hız
> d24<-akb
> d25<-zu3
> d26<-lt
> d27<-flagged
> 
> veriseti<-cbind(d1,d2)
> veriseti<-cbind(veriseti,d3)
> veriseti<-cbind(veriseti,d4)
> veriseti<-cbind(veriseti,d5)
> veriseti<-cbind(veriseti,d6)
> veriseti<-cbind(veriseti,d7)
> veriseti<-cbind(veriseti,d8)
> veriseti<-cbind(veriseti,d9)
> veriseti<-cbind(veriseti,d10)
> veriseti<-cbind(veriseti,d11)
> veriseti<-cbind(veriseti,d12)
> veriseti<-cbind(veriseti,d13)
> veriseti<-cbind(veriseti,d14)
> veriseti<-cbind(veriseti,d15)
> veriseti<-cbind(veriseti,d16)
> veriseti<-cbind(veriseti,d17)
> veriseti<-cbind(veriseti,d18)
> veriseti<-cbind(veriseti,d19)
> veriseti<-cbind(veriseti,d20)
> veriseti<-cbind(veriseti,d21)
> veriseti<-cbind(veriseti,d22)
> veriseti<-cbind(veriseti,d23)
> veriseti<-cbind(veriseti,d24)
> veriseti<-cbind(veriseti,d25)
> veriseti<-cbind(veriseti,d26)
> veriseti<-cbind(veriseti,d27)
> 
> veriseti<-edit(veriseti)
> ncol(veriseti)
[1] 27
> ölcekleme<-function(x,na.rm=T){
+ return((x-min(x))/(max(x)-min(x)))
+ }


> veriseti$flagged = factor(veriseti$flagged, levels = c(0, 1))
> veriseti[-27]<-ölcekleme(veriseti[-27])
> library(caTools)
> set.seed(123)
> split = sample.split(veriseti$flagged, SplitRatio = 0.70)
> egitimset = subset(veriseti, split == TRUE)
> testset = subset(veriseti, split == FALSE)
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.
> classifier = randomForest(x = egitimset[-27],
+ y = egitimset$flagged,
+  ntree = 1000)
> y_pred = predict(classifier, newdata = testset[-27])
>  cm = table(testset[, 27], y_pred)
> cm
   y_pred
      0   1
  0 475   2
  1   8   6


















		YENİDENNNNNN




> yanıtlar<-read.table("yanıtlarikili.txt",header=T)
> rt<-read.table("RT.txt",header=T)
> demografik<-read.table("demografik.txt",header=T)
> tsüre<-demografik[,10]
> deneme<-read.table("deneme.txt",header=T)
> hız<-read.table("hız.txt",header=T)
> yetenek<-read.table("yetenek.txt",header=T)
> akb<-read.table("AKB.txt",header=T)
> dkb<-read.table("DKB.txt",header=T)
> ekb<-read.table("EKB.txt",header=T)
> g<-read.table("G.txt",header=T)
> ht<-read.table("Ht.txt",header=T)
> lz<-read.table("lz.txt",header=T)
> lzs<-read.table("lzstar.txt",header=T)
> ncı<-read.table("NCI.txt",header=T)
> pbs<-read.table("PBS.txt",header=T)
> csato<-read.table("CSato.txt",header=T)
> cstar<-read.table("CStar.txt",header=T)
> u3<-read.table("U3.txt",header=T)
> zu3<-read.table("ZU3.txt",header=T)
> lt<-read.table("ChiRT.txt",header=T)
> flagged<-demografik[,3]
> 
> 
> veri<-cbind(yanıtlar,rt)
> veri<-cbind(veri,tsüre)
> veri<-cbind(veri,deneme)
> veri<-cbind(veri,hız)
> veri<-cbind(veri,yetenek)
> veri<-cbind(veri,akb)
> veri<-cbind(veri,dkb)
> veri<-cbind(veri,ekb)
> veri<-cbind(veri,g)
> veri<-cbind(veri,ht)
> veri<-cbind(veri,lz)
> veri<-cbind(veri,lzs)
> veri<-cbind(veri,ncı)
> veri<-cbind(veri,pbs)
> veri<-cbind(veri,csato)
> veri<-cbind(veri,cstar)
> veri<-cbind(veri,u3)
> veri<-cbind(veri,zu3)
> veri<-cbind(veri,lt)
> veri<-cbind(veri,flagged)
> 
> veri<-edit(veri)
> 
> 
> ölcekleme<-function(x,na.rm=T){
+     return((x-min(x))/(max(x)-min(x)))
+ }
> 
> veri$flagged = factor(veri$flagged, levels = c(0, 1))
> 
> veri[-359]<-ölcekleme(veri[-359])
> 
> 
> 
> library(caret)

> 
> 
> 
> 
> 
> control <- rfeControl(functions=rfFuncs, method="cv", number=10)
> results <- rfe(veri[,1:358], veri[,359], sizes=c(1:8), rfeControl=control)

> results <- rfe(veri[,1:358], veri[,359], sizes=c(1:358), rfeControl=control)

> results <- rfe(veri[,1:358], veri[,359], sizes=c(1:358), rfeControl=control)
> predictors(results)
 [1] "V1"       "tsüre"    "AKB"      "ZU3"      "EKB"      "idur.81"  "idur.77"  "V1.2"     "idur.15"  "V1.1"     "idur.88"  "idur.166" "idur.162" "idur.59" 
[15] "idur.36"  "idur.30"  "idur.111" "idur.163" "lzstar"   "PBS"      "idur.128" "CSato"    "NCI"      "idur.114" "idur.146" "G"        "idur.67"  "idur.110"
[29] "idur.26"  "idur.155" "U3"       "idur.22"  "idur.12"  "idur.37"  "idur.41"  "lz"       "idur.6"   "idur.142" "DKB"      "idur.18"  "idur.148" "idur.126"
[43] "idur.157" "idur.45"  "idur.93"  "idur.54"  "deneme"   "idur.3"   "iraw.157" "idur.35"  "idur.66"  "idur.71"  "idur.5"   "idur.122" "idur.21"  "idur.138"
[57] "idur.57"  "idur.19"  "idur.85"  "idur.170" "idur.16"  "iraw.152" "idur.82"  "iraw.153" "idur.135" "idur.153" "idur.69"  "idur.102" "idur.159" "idur.108"
[71] "Ht"       "idur.149" "idur.107" "iraw.23"  "iraw.90"  "iraw.57"  "iraw.62"  "idur.73"  "idur.130" "iraw.117" "iraw.60" 
> results<-edit(results)
> 
> 
> 
> 
> d1<-yanıtlar[,157]
> d2<-yanıtlar[,152]
> d3<-yanıtlar[,153]
> d4<-yanıtlar[,23]
> d5<-yanıtlar[,90]
> d6<-yanıtlar[,57]
> d7<-yanıtlar[,62]
> d8<-yanıtlar[,117]
> d9<-yanıtlar[,60]
> d10<-rt[,81]
> d11<-rt[,77]
> d12<-rt[,15]
> d13<-rt[,88]
> d16<-rt[,166]
> d14<-rt[,162]
> d15<-rt[,59]
> d17<-rt[,36]
> d18<-rt[,30]
> d19<-rt[,111]
> d20<-rt[,163]
> d21<-rt[,128]
> d22<-rt[,114]
> d23<-rt[,146]
> d24<-rt[,67]
> d25<-rt[,110]
> d26<-rt[,26]
> d27<-rt[,155]
> d28<-rt[,22]
> d29<-rt[,12]
> d30<-rt[,37]
> d31<-rt[,41]
> d32<-rt[,6]
> d33<-rt[,142]
> d34<-rt[,18]
> d35<-rt[,148]
> d36<-rt[,126]
> d37<-rt[,157]
> d38<-rt[,45]
> d39<-rt[,93]
> d40<-rt[,54]
> d41<-rt[,3]
> d42<-rt[,35]
> d43<-rt[,66]
> d44<-rt[,71]
> d45<-rt[,5]
> d46<-rt[,122]
> d47<-rt[,21]
> d48<-rt[,138]
> d49<-rt[,57]
> d50<-rt[,19]
> d51<-rt[,85]
> d52<-rt[,170]
> d53<-rt[,16]
> d54<-rt[,82]
> d55<-rt[,135]
> d56<-rt[,153]
> d57<-rt[,69]
> d58<-rt[,102]
> d59<-rt[,159]
> d60<-rt[,108]
> d61<-rt[,149]
> d62<-rt[,107]
> d63<-rt[,73]
> d64<-rt[,130]
> 
> veri<-edit(veri)
> 
> veriseti<-cbind(d1,d2)
> veriseti<-cbind(veriseti,d3)
> veriseti<-cbind(veriseti,d4)
> veriseti<-cbind(veriseti,d5)
> veriseti<-cbind(veriseti,d6)
> veriseti<-cbind(veriseti,d7)
> veriseti<-cbind(veriseti,d8)
> veriseti<-cbind(veriseti,d9)
> veriseti<-cbind(veriseti,d10)
> veriseti<-cbind(veriseti,d11)
> veriseti<-cbind(veriseti,d12)
> veriseti<-cbind(veriseti,d13)
> veriseti<-cbind(veriseti,d14)
> veriseti<-cbind(veriseti,d15)
> veriseti<-cbind(veriseti,d16)
> veriseti<-cbind(veriseti,d17)
> veriseti<-cbind(veriseti,d18)
> veriseti<-cbind(veriseti,d19)
> veriseti<-cbind(veriseti,d20)
> veriseti<-cbind(veriseti,d21)
> veriseti<-cbind(veriseti,d22)
> veriseti<-cbind(veriseti,d23)
> veriseti<-cbind(veriseti,d24)
> veriseti<-cbind(veriseti,d25)
> veriseti<-cbind(veriseti,d26)
> veriseti<-cbind(veriseti,d27)
> veriseti<-cbind(veriseti,d28)
> veriseti<-cbind(veriseti,d29)
> veriseti<-cbind(veriseti,d30)
> veriseti<-cbind(veriseti,d31)
> veriseti<-cbind(veriseti,d32)
> veriseti<-cbind(veriseti,d33)
> veriseti<-cbind(veriseti,d34)
> veriseti<-cbind(veriseti,d35)
> veriseti<-cbind(veriseti,d36)
> veriseti<-cbind(veriseti,d37)
> veriseti<-cbind(veriseti,d38)
> veriseti<-cbind(veriseti,d39)
> veriseti<-cbind(veriseti,d40)
> veriseti<-cbind(veriseti,d41)
> veriseti<-cbind(veriseti,d42)
> veriseti<-cbind(veriseti,d43)
> veriseti<-cbind(veriseti,d44)
> veriseti<-cbind(veriseti,d45)
> veriseti<-cbind(veriseti,d46)
> veriseti<-cbind(veriseti,d47)
> veriseti<-cbind(veriseti,d48)
> veriseti<-cbind(veriseti,d49)
> veriseti<-cbind(veriseti,d50)
> veriseti<-cbind(veriseti,d51)
> veriseti<-cbind(veriseti,d52)
> veriseti<-cbind(veriseti,d53)
> veriseti<-cbind(veriseti,d54)
> veriseti<-cbind(veriseti,d55)
> veriseti<-cbind(veriseti,d56)
> veriseti<-cbind(veriseti,d57)
> veriseti<-cbind(veriseti,d58)
> veriseti<-cbind(veriseti,d59)
> veriseti<-cbind(veriseti,d60)
> veriseti<-cbind(veriseti,d61)
> veriseti<-cbind(veriseti,d62)
> veriseti<-cbind(veriseti,d63)
> veriseti<-cbind(veriseti,d64)
> veriseti<-cbind(veriseti,hız)
> veriseti<-cbind(veriseti,tsüre)
> veriseti<-cbind(veriseti,akb)
> veriseti<-cbind(veriseti,zu3)
> veriseti<-cbind(veriseti,ekb)
> veriseti<-cbind(veriseti,lt)
> veriseti<-cbind(veriseti,yetenek)
> veriseti<-cbind(veriseti,lzs)
> veriseti<-cbind(veriseti,pbs)
> veriseti<-cbind(veriseti,csato)
> veriseti<-cbind(veriseti,ncı)
> veriseti<-cbind(veriseti,g)
> veriseti<-cbind(veriseti,u3)
> veriseti<-cbind(veriseti,lz)
> veriseti<-cbind(veriseti,dkb)
> veriseti<-cbind(veriseti,deneme)
> veriseti<-cbind(veriseti,ht)
> veriseti<-cbind(veriseti,flagged)
> 
> veriseti<-edit(veriseti)
> ncol(veriseti)
[1] 82
> ölcekleme<-function(x,na.rm=T){
+ return((x-min(x))/(max(x)-min(x)))
+ }
> veriseti$flagged = factor(veriseti$flagged, levels = c(0, 1))
> veriseti[-82]<-ölcekleme(veriseti[-82])
> library(caTools)
> set.seed(123)
> split = sample.split(veriseti$flagged, SplitRatio = 0.70)
> egitimset = subset(veriseti, split == TRUE)
> testset = subset(veriseti, split == FALSE)


> library(e1071)

> 
> library(randomForest)

> classifier = randomForest(x = egitimset[-82],
+ y = egitimset$flagged,
+ ntree = 1000)
> y_pred = predict(classifier, newdata = testset[-82])
> cm = table(testset[, 82], y_pred)
> cm
   y_pred
      0   1
  0 476   1
  1   7   7
> 
> 
> 
> classifier = naiveBayes(x = egitimset[-82],
+ y = egitimset$flagged)
> y_pred = predict(classifier, newdata = testset[-82])
> cm = table(testset[, 82], y_pred)
> cm
   y_pred
      0   1
  0 454  23
  1   5   9
> 
> 
> 
> 
> library(class)
> y_pred = knn(train = egitimset[,-82],
+ test = testset[,-82],
+ cl = egitimset[,82],
+ k = 5)
> cm = table(testset[, 82], y_pred)
> cm
   y_pred
      0   1
  0 477   0
  1   9   5

















denetimsiz yöntemlerrr



> yanıtlar<-read.table("yanıtlarikili.txt",header=T)
> rt<-read.table("RT.txt",header=T)
> demografik<-read.table("demografik.txt",header=T)
> tsüre<-demografik[,10]
> deneme<-read.table("deneme.txt",header=T)
> hız<-read.table("hız.txt",header=T)
> yetenek<-read.table("yetenek.txt",header=T)
> akb<-read.table("AKB.txt",header=T)
> dkb<-read.table("DKB.txt",header=T)
> ekb<-read.table("EKB.txt",header=T)
> g<-read.table("G.txt",header=T)
> ht<-read.table("Ht.txt",header=T)
> lz<-read.table("lz.txt",header=T)
> lzs<-read.table("lzstar.txt",header=T)
> ncı<-read.table("NCI.txt",header=T)
> pbs<-read.table("PBS.txt",header=T)
> csato<-read.table("CSato.txt",header=T)
> cstar<-read.table("CStar.txt",header=T)
> u3<-read.table("U3.txt",header=T)
> zu3<-read.table("ZU3.txt",header=T)
> lt<-read.table("ChiRT.txt",header=T)
> flagged<-demografik[,3]
> 
> 
> veri<-cbind(yanıtlar,rt)
> veri<-cbind(veri,tsüre)
> veri<-cbind(veri,deneme)
> veri<-cbind(veri,hız)
> veri<-cbind(veri,yetenek)
> veri<-cbind(veri,akb)
> veri<-cbind(veri,dkb)
> veri<-cbind(veri,ekb)
> veri<-cbind(veri,g)
> veri<-cbind(veri,ht)
> veri<-cbind(veri,lz)
> veri<-cbind(veri,lzs)
> veri<-cbind(veri,ncı)
> veri<-cbind(veri,pbs)
> veri<-cbind(veri,csato)
> veri<-cbind(veri,cstar)
> veri<-cbind(veri,u3)
> veri<-cbind(veri,zu3)
> veri<-cbind(veri,lt)
> veri<-cbind(veri,flagged)
> 
> d1<-yanıtlar[,157]
> d2<-yanıtlar[,152]
> d3<-yanıtlar[,153]
> d4<-yanıtlar[,23]
> d5<-yanıtlar[,90]
> d6<-yanıtlar[,57]
> d7<-yanıtlar[,62]
> d8<-yanıtlar[,117]
> d9<-yanıtlar[,60]
> d10<-rt[,81]
> d11<-rt[,77]
> d12<-rt[,15]
> d13<-rt[,88]
> d16<-rt[,166]
> d14<-rt[,162]
> d15<-rt[,59]
> d17<-rt[,36]
> d18<-rt[,30]
> d19<-rt[,111]
> d20<-rt[,163]
> d21<-rt[,128]
> d22<-rt[,114]
> d23<-rt[,146]
> d24<-rt[,67]
> d25<-rt[,110]
> d26<-rt[,26]
> d27<-rt[,155]
> d28<-rt[,22]
> d29<-rt[,12]
> d30<-rt[,37]
> d31<-rt[,41]
> d32<-rt[,6]
> d33<-rt[,142]
> d34<-rt[,18]
> d35<-rt[,148]
> d36<-rt[,126]
> d37<-rt[,157]
> d38<-rt[,45]
> d39<-rt[,93]
> d40<-rt[,54]
> d41<-rt[,3]
> d42<-rt[,35]
> d43<-rt[,66]
> d44<-rt[,71]
> d45<-rt[,5]
> d46<-rt[,122]
> d47<-rt[,21]
> d48<-rt[,138]
> d49<-rt[,57]
> d50<-rt[,19]
> d51<-rt[,85]
> d52<-rt[,170]
> d53<-rt[,16]
> d54<-rt[,82]
> d55<-rt[,135]
> d56<-rt[,153]
> d57<-rt[,69]
> d58<-rt[,102]
> d59<-rt[,159]
> d60<-rt[,108]
> d61<-rt[,149]
> d62<-rt[,107]
> d63<-rt[,73]
> d64<-rt[,130]
> 
> veri<-edit(veri)
> 
> veriseti<-cbind(d1,d2)
> veriseti<-cbind(veriseti,d3)
> veriseti<-cbind(veriseti,d4)
> veriseti<-cbind(veriseti,d5)
> veriseti<-cbind(veriseti,d6)
> veriseti<-cbind(veriseti,d7)
> veriseti<-cbind(veriseti,d8)
> veriseti<-cbind(veriseti,d9)
> veriseti<-cbind(veriseti,d10)
> veriseti<-cbind(veriseti,d11)
> veriseti<-cbind(veriseti,d12)
> veriseti<-cbind(veriseti,d13)
> veriseti<-cbind(veriseti,d14)
> veriseti<-cbind(veriseti,d15)
> veriseti<-cbind(veriseti,d16)
> veriseti<-cbind(veriseti,d17)
> veriseti<-cbind(veriseti,d18)
> veriseti<-cbind(veriseti,d19)
> veriseti<-cbind(veriseti,d20)
> veriseti<-cbind(veriseti,d21)
> veriseti<-cbind(veriseti,d22)
> veriseti<-cbind(veriseti,d23)
> veriseti<-cbind(veriseti,d24)
> veriseti<-cbind(veriseti,d25)
> veriseti<-cbind(veriseti,d26)
> veriseti<-cbind(veriseti,d27)
> veriseti<-cbind(veriseti,d28)
> veriseti<-cbind(veriseti,d29)
> veriseti<-cbind(veriseti,d30)
> veriseti<-cbind(veriseti,d31)
> veriseti<-cbind(veriseti,d32)
> veriseti<-cbind(veriseti,d33)
> veriseti<-cbind(veriseti,d34)
> veriseti<-cbind(veriseti,d35)
> veriseti<-cbind(veriseti,d36)
> veriseti<-cbind(veriseti,d37)
> veriseti<-cbind(veriseti,d38)
> veriseti<-cbind(veriseti,d39)
> veriseti<-cbind(veriseti,d40)
> veriseti<-cbind(veriseti,d41)
> veriseti<-cbind(veriseti,d42)
> veriseti<-cbind(veriseti,d43)
> veriseti<-cbind(veriseti,d44)
> veriseti<-cbind(veriseti,d45)
> veriseti<-cbind(veriseti,d46)
> veriseti<-cbind(veriseti,d47)
> veriseti<-cbind(veriseti,d48)
> veriseti<-cbind(veriseti,d49)
> veriseti<-cbind(veriseti,d50)
> veriseti<-cbind(veriseti,d51)
> veriseti<-cbind(veriseti,d52)
> veriseti<-cbind(veriseti,d53)
> veriseti<-cbind(veriseti,d54)
> veriseti<-cbind(veriseti,d55)
> veriseti<-cbind(veriseti,d56)
> veriseti<-cbind(veriseti,d57)
> veriseti<-cbind(veriseti,d58)
> veriseti<-cbind(veriseti,d59)
> veriseti<-cbind(veriseti,d60)
> veriseti<-cbind(veriseti,d61)
> veriseti<-cbind(veriseti,d62)
> veriseti<-cbind(veriseti,d63)
> veriseti<-cbind(veriseti,d64)
> veriseti<-cbind(veriseti,hız)
> veriseti<-cbind(veriseti,tsüre)
> veriseti<-cbind(veriseti,akb)
> veriseti<-cbind(veriseti,zu3)
> veriseti<-cbind(veriseti,ekb)
> veriseti<-cbind(veriseti,lt)
> veriseti<-cbind(veriseti,yetenek)
> veriseti<-cbind(veriseti,lzs)
> veriseti<-cbind(veriseti,pbs)
> veriseti<-cbind(veriseti,csato)
> veriseti<-cbind(veriseti,ncı)
> veriseti<-cbind(veriseti,g)
> veriseti<-cbind(veriseti,u3)
> veriseti<-cbind(veriseti,lz)
> veriseti<-cbind(veriseti,dkb)
> veriseti<-cbind(veriseti,deneme)
> veriseti<-cbind(veriseti,ht)
> veriseti<-cbind(veriseti,flagged)
> 
> veriseti<-edit(veriseti)
> ncol(veriseti)
[1] 82
> ölcekleme<-function(x,na.rm=T){
+ return((x-min(x))/(max(x)-min(x)))
+ }
> veriseti[-82]<-ölcekleme(veriseti[-82])
> 
> library(cluster)
> library(factoextra)
> library(tidyverse)

> distance<-get_dist(veriseti[,1:81])
> k<-kmeans(distance,2,nstart=25)
> cm=table(veriseti$flagged,k$cluster)
> cm
   
       1    2
  0  379 1211
  1   21   25
> 21/46*100
[1] 45.65217
> 1211/1590*100
[1] 76.16352





> library(ClusterR)
> veri<-veriseti[,-82]
> veri<-center_scale(veri, mean_center = TRUE, sd_scale = TRUE)
> gmm = GMM(veri,2 , "eucl_dist", "random_spread", 100000, 50000)
> pr = predict_GMM(veri, gmm$centroids, gmm$covariance_matrices, gmm$weights)
> cm = table(veriseti$flagged, pr$cluster_labels)
> cm
   
      0   1
  0 496 1094
  1  28  18

> 28/46*100
[1] 60.86957
> 1094/1590*100
[1] 68.80503






rf-hca


> veriseti<-edit(veriseti)
> ncol(veriseti)
[1] 82
> 
> 
> 
> ölcekleme<-function(x,na.rm=T){
+ return((x-min(x))/(max(x)-min(x)))
+ }
> veriseti[-82]<-ölcekleme(veriseti[-82])
> 
> 
> library(cluster)
> library(factoextra)
> library(tidyverse)
> library(randomForest)
> rf.fit <- randomForest(x = veriseti[,1:81], y = NULL, ntree = 10000, proximity = TRUE, oob.prox = TRUE)
> hclust.rf <- hclust(as.dist(1-rf.fit$proximity), method = "average")
> rf.cluster = cutree(hclust.rf, k=2)
> veriseti.pc <- prcomp(veriseti[,1:81], center = FALSE, scale. = FALSE)$x %>% as.data.frame()
> veriseti.pc$rf.clusters <- rf.cluster
> table(rf.cluster, veriseti$flagged)
          
rf.cluster    0    1
         1  552   21
         2 1038   25
		 
> 21/46*100
[1] 45.65217
> 1038/1590*100
[1] 65.28302






